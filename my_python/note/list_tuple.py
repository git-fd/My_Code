# 切片本质是导出

# 增
heros = ['钢铁侠', '绿巨人']        # 列表是可变的
heros.append('黑寡妇')              # 追加一个元素
heros.extend(['鹰眼', '灭霸', '雷神'])  # 追加一个可迭代对象
s = [1, 2, 3, 4, 5]
s[len(s):] = [6]            # append
s[len(s):] = [7, 8, 9]      # extend

s = [1, 3, 4, 5]
s.insert(1, 2)          # 在任意位置插入元素
s.insert(0, 0)
s.insert(len(s), 6)     # append

# 删
heros.remove('灭霸')    # 删除该元素， 存在多个删第一个， 不存在报异常
heros.pop(2)            # 删除该位置的元素，并返回该元素
heros.clear()           # 清空该列表

a = [0, 1, 2, 3, 4]
a[2:] = [5, 6, 7]       # 删除索引2及之后的元素，extend

# 改
a = [2, 3, 8, 7, 1, 0, 9, 3, 3, 9, 5, 6]
a.sort()        # 排序
a.reverse()     # 反转
a = [2, 3, 8, 7, 1, 0, 9, 3, 3, 9, 5, 6]
a.sort(reverse=True)     # 与上等价

# 查
a.count(3)        # 查找元素的个数
a.index(3)       # 查找元素的索引值，存在多个找第一个，不存在报异常

# 拷贝
a1 = a.copy()   # 浅拷贝，多层嵌套不适用，效率高
a2 = a[:]       # 与上等价
aa = __import__('copy').deepcopy(a)  # 深拷贝，可以拷贝嵌套列表，效率低

a1 + a2     # 列表的加法，拼接
a * 2       # 列表的乘法，重复

# 推导式
oho = [1, 2, 3, 4, 5]
oho = [i * 2 for i in oho]      # 列表推导式
oohhoo = [[0] * 3 for i in range(3)]


########################################################
# 元组不能修改， a = 1, 2, 3, 4
# x, y = 1, 2   # 元组的打包解包
# 不修改元组中的引用的方法均有
# 元组中的列表可以修改， 但列表的引用不能修改
